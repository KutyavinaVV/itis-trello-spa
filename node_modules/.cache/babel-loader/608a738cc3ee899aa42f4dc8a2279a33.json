{"ast":null,"code":"var _jsxFileName = \"/home/vera/React/itis-course-2020-2021-fe/src/components/pages/ToDoPage/ToDoPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Wrapper, Title, VerticalLine } from \"./styled\";\nimport ToDoList from '../../molecules/ToDoList';\nimport ToDoForm from '../../molecules/ToDoForm';\nimport useToDo from \"../../../hooks/useToDo\";\nimport Button from \"../../atoms/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ToDoPage = () => {\n  _s();\n\n  const {\n    list: initialList,\n    updateList\n  } = useToDo();\n  const [list, setList] = useState(initialList);\n  const [listUnSaved, setListUnsaved] = useState(false);\n  const [isChange, setChange] = useState(false);\n  useEffect(() => {\n    if (JSON.stringify(initialList) !== JSON.stringify(list)) {\n      setListUnsaved(true);\n    } else {\n      setListUnsaved(false);\n    }\n  }, [initialList, list, listUnSaved]);\n\n  const onAddNewListItem = value => {\n    setList([...list, {\n      text: value,\n      checked: false,\n      id: list.length\n    }]);\n  };\n\n  const handleRemove = i => setList(list.filter((elem, index) => i !== index));\n\n  const onSave = () => {\n    updateList(list);\n  };\n\n  const onDismiss = () => {\n    setList(initialList);\n  };\n\n  const handleCheck = (ev, i) => {\n    const {\n      target: {\n        checked\n      }\n    } = ev;\n    setList(currentList => currentList.map((listItem, index) => i === index ? { ...listItem,\n      checked\n    } : listItem));\n  };\n\n  useEffect(() => {\n    setChange(!isChange);\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(VerticalLine, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        isChange: isChange,\n        children: \"ToDoPage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n        list: list,\n        onRemove: handleRemove,\n        onCheck: handleCheck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n        onSubmit: onAddNewListItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), listUnSaved && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onDismiss,\n          children: \"Dismiss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: onSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ToDoPage, \"ynNxJrt7VxjJuCIvGsIl1/SJzPU=\", false, function () {\n  return [useToDo];\n});\n\n_c = ToDoPage;\nexport default ToDoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoPage\");","map":{"version":3,"sources":["/home/vera/React/itis-course-2020-2021-fe/src/components/pages/ToDoPage/ToDoPage.js"],"names":["useState","useEffect","Wrapper","Title","VerticalLine","ToDoList","ToDoForm","useToDo","Button","ToDoPage","list","initialList","updateList","setList","listUnSaved","setListUnsaved","isChange","setChange","JSON","stringify","onAddNewListItem","value","text","checked","id","length","handleRemove","i","filter","elem","index","onSave","onDismiss","handleCheck","ev","target","currentList","map","listItem"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Wrapper, Title, VerticalLine } from \"./styled\";\nimport ToDoList from '../../molecules/ToDoList';\nimport ToDoForm from '../../molecules/ToDoForm';\nimport useToDo from \"../../../hooks/useToDo\";\nimport Button from \"../../atoms/Button\";\n\nconst ToDoPage = () => {\n    const { list: initialList, updateList } = useToDo();\n    const [list, setList] = useState(initialList);\n    const [listUnSaved, setListUnsaved] = useState(false);\n    const [isChange, setChange] = useState(false);\n\n    useEffect(() => {\n        if (JSON.stringify(initialList) !== JSON.stringify(list)) {\n            setListUnsaved(true);\n        } else {\n            setListUnsaved(false);\n        }\n    }, [initialList, list, listUnSaved]);\n\n    const onAddNewListItem = (value) => {\n        setList([...list, { text: value, checked: false,  id: list.length }]);\n    };\n    const handleRemove = (i) => setList(list.filter((elem, index) => i !== index));\n\n    const onSave = () => {\n        updateList(list);\n    };\n\n    const onDismiss = () => {\n        setList(initialList);\n    };\n\n    const handleCheck = (ev, i) => {\n        const {\n            target: { checked },\n        } = ev;\n        setList((currentList) => currentList.map((listItem, index) => (i === index ? { ...listItem, checked } : listItem)));\n    };\n\n    useEffect(() => {\n        setChange(!isChange)\n    }, [list]);\n\n    return (\n        <>\n            <VerticalLine />\n            <Wrapper>\n                <Title isChange={isChange}>ToDoPage</Title>\n                <ToDoList list={list} onRemove={handleRemove} onCheck={handleCheck}  />\n                <ToDoForm onSubmit={onAddNewListItem} />\n                {listUnSaved && (\n                    <div>\n                        <Button onClick={onDismiss}>Dismiss</Button>\n                        <Button primary onClick={onSave}>\n                            Save\n                        </Button>\n                    </div>\n                )}\n            </Wrapper>\n        </>\n    );\n};\n\nexport default ToDoPage;\n"]},"metadata":{},"sourceType":"module"}